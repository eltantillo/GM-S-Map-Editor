/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javamapeditor;


import graficos.*;
import java.awt.Point;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;

import java.io.File;
import java.io.IOException;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;
import org.xml.sax.SAXException;
/**
 *
 * @author MarcoM
 */
public class Interfaz extends javax.swing.JFrame {
    private ArrayList<SimpleRoom> srs;
    private int currentBackgroundTile;
    private int currentSimpleRoom;

    private int mousePosX,mousePosFinX;
    private int mousePosY,mousePosFinY;

    private int mouseMapPosX,mouseMapPosFinX;
    private int mouseMapPosY,mouseMapPosFinY;
    
    private boolean dragClick;
    private boolean rectangle;
    
    public Interfaz() {
        initComponents();
        srs = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu4 = new javax.swing.JMenu();
        jSplitPane3 = new javax.swing.JSplitPane();
        jSplitPane4 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tiles = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        map = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        maps = new javax.swing.JList<>();
        jToolBar1 = new javax.swing.JToolBar();
        jToolBar2 = new javax.swing.JToolBar();
        tw = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        th = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jButton1 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        showGrid = new javax.swing.JToggleButton();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        cargar = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        tileset1 = new javax.swing.JMenuItem();
        tileset2 = new javax.swing.JMenuItem();

        jMenu4.setText("jMenu4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane3.setToolTipText("");

        tiles.setText("tiles");
        tiles.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        tiles.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                tilesMouseDragged(evt);
            }
        });
        tiles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tilesMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tilesMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tiles);

        jSplitPane4.setLeftComponent(jScrollPane1);

        map.setText("map");
        map.setToolTipText("");
        map.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        map.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                mapMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                mapMouseMoved(evt);
            }
        });
        map.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mapMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mapMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(map);

        jSplitPane4.setRightComponent(jScrollPane2);

        jSplitPane3.setLeftComponent(jSplitPane4);

        maps.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Map 1", "Map 2" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        maps.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mapsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(maps);

        jSplitPane3.setRightComponent(jScrollPane3);

        jToolBar1.setRollover(true);

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        tw.setText("width");
        jToolBar2.add(tw);
        jToolBar2.add(jSeparator2);

        th.setText("height");
        jToolBar2.add(th);
        jToolBar2.add(jSeparator1);

        jButton1.setText("Go");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton1);
        jToolBar2.add(jSeparator3);

        showGrid.setText("Grid: ON");
        showGrid.setFocusable(false);
        showGrid.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        showGrid.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        showGrid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showGridActionPerformed(evt);
            }
        });
        jToolBar2.add(showGrid);

        jButton2.setText("Test");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton2);

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 255));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jMenuBar1.setDoubleBuffered(true);

        jMenu1.setText("File");

        cargar.setText("Cargar");
        cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarActionPerformed(evt);
            }
        });
        jMenu1.add(cargar);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Layer");

        jMenuItem1.setText("Capa 1");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setText("Capa 2");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setText("Capa 3");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("Capa 4");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("Capa 5");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("TileSet");

        tileset1.setText("TileSet1");
        tileset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tileset1ActionPerformed(evt);
            }
        });
        jMenu3.add(tileset1);

        tileset2.setText("TileSet2");
        tileset2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tileset2ActionPerformed(evt);
            }
        });
        jMenu3.add(tileset2);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 663, Short.MAX_VALUE)
            .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarActionPerformed
        JFileChooser jfc = new JFileChooser("C:\\Users\\MarcoM\\Documents\\RPGXP\\Remeber School\\Graphics\\Tilesets");
        jfc.showOpenDialog(null);
        try{
            BackgroundTile bt = new BackgroundTile(ImageIO.read(jfc.getSelectedFile()),"potato",32,32);
            bt.drawBackgroundTile(tiles,map);
            container.Container.bts.add(bt);
            SimpleRoom sr = new SimpleRoom(34, 34, 32, 32);
            srs.add(sr);
            System.out.println(srs.size() + ": Totalongo");
            srs.get(currentSimpleRoom).update(map, 0, 0);
        }
        catch(Exception ex){
            System.out.println(ex.toString());
        }
        
        jfc = new JFileChooser("C:\\Users\\MarcoM\\Documents\\RPGXP\\Remeber School\\Graphics\\Tilesets");
        jfc.showOpenDialog(null);
        try{
            BackgroundTile bt = new BackgroundTile(ImageIO.read(jfc.getSelectedFile()),"potato2",16,32);
            container.Container.bts.add(bt);
            SimpleRoom sr = new SimpleRoom(34, 34, 32, 32);
            srs.add(sr);
        }
        catch(Exception ex){
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_cargarActionPerformed

    private void tilesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tilesMousePressed
        mousePosX = container.Container.bts.get(currentBackgroundTile).toGrid(evt.getX(), 1);
        mousePosY = container.Container.bts.get(currentBackgroundTile).toGrid(evt.getY(), 0);
    }//GEN-LAST:event_tilesMousePressed

    private void mapMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapMouseMoved
        srs.get(currentSimpleRoom).update(map, srs.get(currentSimpleRoom).toGrid(evt.getX(),1), srs.get(currentSimpleRoom).toGrid(evt.getY(),0));
    }//GEN-LAST:event_mapMouseMoved

    private void mapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapMouseClicked
        if(evt.getButton() == 3){
            srs.get(currentSimpleRoom).setSelection(new Point(srs.get(currentSimpleRoom).toGrid(evt.getX(), 1),srs.get(currentSimpleRoom).toGrid(evt.getY(), 1)), new Point(srs.get(currentSimpleRoom).toGrid(evt.getX(), 1),srs.get(currentSimpleRoom).toGrid(evt.getY(), 1)));
            srs.get(currentSimpleRoom).update(map, srs.get(currentSimpleRoom).toGrid(evt.getX(), 1), srs.get(currentSimpleRoom).toGrid(evt.getX(), 0));
        }
        else
            srs.get(currentSimpleRoom).click(map, srs.get(currentSimpleRoom).toGrid(evt.getX(),1), srs.get(currentSimpleRoom).toGrid(evt.getY(),0));
    }//GEN-LAST:event_mapMouseClicked

    private void tilesMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tilesMouseDragged
        mousePosFinX = container.Container.bts.get(currentBackgroundTile).toGrid(evt.getX(), 1);
        mousePosFinY = container.Container.bts.get(currentBackgroundTile).toGrid(evt.getY(), 0);
        container.Container.bts.get(currentBackgroundTile).setSelection(new Point(mousePosX,mousePosY), new Point(mousePosFinX,mousePosFinY));
        container.Container.bts.get(currentBackgroundTile).drawBackgroundTile(tiles, map);
    }//GEN-LAST:event_tilesMouseDragged

    private void tilesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tilesMouseReleased
        mousePosFinX = container.Container.bts.get(currentBackgroundTile).toGrid(evt.getX(), 1);
        mousePosFinY = container.Container.bts.get(currentBackgroundTile).toGrid(evt.getY(), 0);
        container.Container.bts.get(currentBackgroundTile).setSelection(new Point(mousePosX,mousePosY), new Point(mousePosFinX,mousePosFinY));
        container.Container.bts.get(currentBackgroundTile).drawBackgroundTile(tiles, map);
    }//GEN-LAST:event_tilesMouseReleased

    private void mapMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapMouseDragged
        if(SwingUtilities.isRightMouseButton(evt)){ 
            mouseMapPosFinX = srs.get(currentSimpleRoom).toGrid(evt.getX(), 1);
            mouseMapPosFinY = srs.get(currentSimpleRoom).toGrid(evt.getY(), 0);
            srs.get(currentSimpleRoom).setSelection(new Point(mouseMapPosX,mouseMapPosY), new Point(mouseMapPosFinX,mouseMapPosFinY));
            srs.get(currentSimpleRoom).update(map, srs.get(currentSimpleRoom).toGrid(evt.getX(), 1), srs.get(currentSimpleRoom).toGrid(evt.getY(), 0));
        }
        else{
            srs.get(currentSimpleRoom).click(map, srs.get(currentSimpleRoom).toGrid(evt.getX(),1), srs.get(currentSimpleRoom).toGrid(evt.getY(),0));}
    }//GEN-LAST:event_mapMouseDragged

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        srs.get(currentSimpleRoom).changeLayer(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        srs.get(currentSimpleRoom).changeLayer(1);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        srs.get(currentSimpleRoom).changeLayer(2);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        srs.get(currentSimpleRoom).changeLayer(3);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        srs.get(currentSimpleRoom).changeLayer(4);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void mapsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapsMouseClicked
        if (evt.getClickCount() == 2) {
            currentSimpleRoom = maps.getSelectedIndex();
            srs.get(currentSimpleRoom).update(
                    map, 
                    srs.get(currentSimpleRoom).toGrid(0,1), 
                    srs.get(currentSimpleRoom).toGrid(0,0)
            );
        }
    }//GEN-LAST:event_mapsMouseClicked

    private void tileset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tileset1ActionPerformed
        currentBackgroundTile = 0;
        container.Container.bts.get(currentBackgroundTile).setSelection(new Point(0,0), new Point(0,0));
        container.Container.bts.get(currentBackgroundTile).drawBackgroundTile(tiles, map);
    }//GEN-LAST:event_tileset1ActionPerformed

    private void tileset2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tileset2ActionPerformed
        currentBackgroundTile = 1;
        container.Container.bts.get(currentBackgroundTile).setSelection(new Point(0,0), new Point(0,0));
        container.Container.bts.get(currentBackgroundTile).drawBackgroundTile(tiles, map);
    }//GEN-LAST:event_tileset2ActionPerformed

    private void mapMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapMousePressed
        mouseMapPosX = srs.get(currentSimpleRoom).toGrid(evt.getX(), 1);
        mouseMapPosY = srs.get(currentSimpleRoom).toGrid(evt.getY(), 0);
    }//GEN-LAST:event_mapMousePressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try{
            srs.get(currentSimpleRoom).changeGrid(Integer.parseInt(tw.getText()),Integer.parseInt(th.getText()));
        }
        catch(Exception ex){
        
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void showGridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showGridActionPerformed
        srs.get(currentSimpleRoom).grid();
    }//GEN-LAST:event_showGridActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        xml.Project.OpenProject();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem cargar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JSplitPane jSplitPane4;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JLabel map;
    private javax.swing.JList<String> maps;
    private javax.swing.JToggleButton showGrid;
    private javax.swing.JTextField th;
    private javax.swing.JLabel tiles;
    private javax.swing.JMenuItem tileset1;
    private javax.swing.JMenuItem tileset2;
    private javax.swing.JTextField tw;
    // End of variables declaration//GEN-END:variables
}
